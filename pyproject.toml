[project]
name = "d4explorer"
description = "Visual exploration of d4 coverage files"
authors = [{ name = "Per Unneberg", email = "per.unneberg@scilifelab.se" }]
dependencies = [
  "panel>=1.6.1",
  "hvplot>=0.11.0",
  "holoviews>=1.20.0",
  "diskcache>=5.6.3",
  "pyd4>=0.3.9",
  "click>=8.1.7",
  "scipy>=1.14.1",
  "watchfiles>=1.0.5",
  "humanize>=4.11.0",
  "param>=2.2.0",
]
readme = "README.md"
requires-python = ">= 3.11"
dynamic = ["version"]

[dependency-groups]
dev = ["jupyter-console>=6.6.3", "pytest>=8.3.4", "pyright>=1.1.384"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.hooks.vcs]
version-file = "src/d4explorer/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/d4explorer"]

[project.scripts]
"d4explorer" = "d4explorer:__main__.cli"
d4explorer-d4filter = "d4explorer.tools.d4filter:cli"
d4explorer-summarize = "d4explorer.tools.summarize:cli"

[tool.pytest.ini_options]
addopts = "--doctest-modules --ignore src/d4explorer/main.py"

[tool.pyright]
venvPath = "."                     # rye installs the venv in the current dir
venv = ".venv"                     #       in a folder called `.venv`
include = ["src"]
pythonVersion = "3.11"             # if library, specify the _lowest_ you support
reportMissingTypeStubs = false
reportAttributeAccessIssue = false
reportCallIssue = false
reportOptionalMemberAccess = false
reportAssignmentType = false

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "A",    # warn about shadowing built-ins
  "E",    # style stuff, whitespaces
  "F",    # important pyflakes lints
  "I",    # import sorting
  "N",    # naming
  "T100", # breakpoints (probably don't want these in prod!)
]
ignore = ["N806"]

[tool.ruff.lint.isort]
# so it knows to group first-party stuff last
known-first-party = ["d4explorer"]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
d4explorer = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.tasks.dev]
args = [{ "arg" = "port", default = "5507" }]
cmd = "panel serve src/d4explorer --dev --show --args serve --port {{port}}"

[tool.pixi.tasks.sandbox]
args = [{ "arg" = "port", default = "5508" }]
cmd = "panel serve src/d4explorer --dev --admin --show --port {{port}} --args sandbox tests/data/sum.d4 --annotation-file tests/data/annotation.gff.gz"

[tool.pixi.tasks.quartodoc]
cmd = "pixi r -e quartodoc quartodoc build --config docs/_quarto.yml"

[tool.pixi.tasks.preview]
depends-on = [{ task = "quartodoc" }]
cmd = "quarto preview"

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }
lint = { features = ["lint"], solve-group = "default" }
quartodoc = ["quartodoc"]

[tool.pixi.feature.dev.tasks]
test = { cmd = "pytest -v -s tests" }

[tool.pixi.feature.dev.dependencies]
jupyterlab = ">=4.4.3,<5"
pytest = ">=8.4.2,<9"
pyright = ">=1.1.406,<2"

[tool.pixi.feature.lint.tasks]
actionlint = { cmd = "actionlint", env = { SHELLCHECK_OPTS = "-e SC2086" } }
lint = { cmd = "pre-commit run --all-files --hook-stage=manual", description = "Run all linters and formatters on all code" }
pre-commit-install = "pre-commit install --install-hooks -t=pre-commit -t=pre-push"
pre-commit-install-minimal = "pre-commit install -t=pre-commit"
pre-commit-run = "pre-commit run --all-files"
ruff-format = "ruff format --force-exclude"
ruff-lint = "ruff check --fix --exit-non-zero-on-fix --force-exclude"
shell-format = "shfmt --write --indent=4 --simplify --binary-next-line"
toml-format = { cmd = "taplo fmt", env = { RUST_LOG = "warn" } }
toml-lint = "taplo lint --verbose **/pyproject.toml"
typecheck-python = "mypy"
typos = "typos --write-changes --force-exclude"

[tool.pixi.feature.lint.dependencies]
pre-commit = "*"
pre-commit-hooks = "*"
ruff = "*"
typos = "*"
actionlint = "*"
go-shfmt = "*"
taplo = "*"
pylint = ">=3.3.8,<4"

[tool.pixi.feature.quartodoc.dependencies]
quartodoc = "*"

[tool.pixi.dependencies]
jsonschema = ">=4.24.0,<5"
